{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:8080\";\n\n// Configure axios defaults\nconst axiosInstance = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Add a request interceptor to include the token\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle authentication errors\naxiosInstance.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    const {\n      status,\n      data\n    } = error.response;\n    console.log(\"API Response Headers:\", error.response.headers);\n    console.log(\"Request URL:\", error.config.url);\n    console.log(\"Request Headers:\", error.config.headers);\n    if (status === 401 || status === 403) {\n      // Clear token on auth errors\n      console.error(`Authentication error (${status}):`, data);\n      localStorage.removeItem(\"token\");\n    }\n    // Attach backend error message (if any) to error.message to make it easier to handle downstream\n    if (data && data.message) {\n      error.message = data.message;\n    }\n  } else if (error.request) {\n    console.error(\"Network error:\", error.message);\n  }\n  return Promise.reject(error);\n});\nexport const recordApi = {\n  getAllRecords: () => axiosInstance.get(\"/api/records/all\"),\n  getRecordsById: id => axiosInstance.get(`/api/records/find/${id}`),\n  getRecordsByName: name => axiosInstance.get(`/api/records/find/name/${name}`),\n  createRecord: recordData => axiosInstance.post(\"/api/records/add\", recordData),\n  updateRecord: (id, recordData) => axiosInstance.put(`/api/records/update/${id}`, recordData),\n  deleteRecord: id => axiosInstance.delete(`/api/records/delete/${id}`),\n  rebookRecord: (id, rebookData) => axiosInstance.post(`/api/records/rebook/${id}`, rebookData)\n};\nexport const calendarApi = {\n  getMyCalendar: () => axiosInstance.get(\"/api/calendars/my\"),\n  getCalendarById: id => axiosInstance.get(`/api/calendars/${id}`),\n  addCalendar: calendarData => axiosInstance.post(\"/api/calendars\", calendarData),\n  deleteCalendar: id => axiosInstance.delete(`/api/calendars/${id}`)\n};\nexport const authApi = {\n  login: credentials => axiosInstance.post(\"/api/auth/login\", credentials),\n  register: userData => axiosInstance.post(\"/api/auth/register\", userData),\n  getCurrentUser: () => axiosInstance.get(\"/api/auth/user\"),\n  logout: () => axiosInstance.post(\"/api/auth/logout\"),\n  getOAuthUrl: () => \"http://localhost:8080/oauth2/authorization/google\",\n  resetPassword: data => axiosInstance.post(\"/api/auth/reset-password\", data)\n};\nexport const userApi = {\n  getUserProfile: () => axiosInstance.get(\"/api/auth/profile\"),\n  updateUser: data => axiosInstance.put(\"/api/auth/update-profile\", data),\n  deleteUser: userId => axiosInstance.post(\"/api/auth/delete\", null, {\n    params: {\n      userId\n    }\n  }),\n  fetchUsers: () => axiosInstance.get(\"/api/auth/all\")\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","axiosInstance","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","data","console","log","url","removeItem","message","recordApi","getAllRecords","get","getRecordsById","id","getRecordsByName","name","createRecord","recordData","post","updateRecord","put","deleteRecord","delete","rebookRecord","rebookData","calendarApi","getMyCalendar","getCalendarById","addCalendar","calendarData","deleteCalendar","authApi","login","credentials","register","userData","getCurrentUser","logout","getOAuthUrl","resetPassword","userApi","getUserProfile","updateUser","deleteUser","userId","params","fetchUsers"],"sources":["C:/Users/alexj/Programing Projects/health_diary/health_diary_frontend/src/service/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:8080\";\r\n\r\n// Configure axios defaults\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Add a request interceptor to include the token\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor to handle authentication errors\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response) {\r\n      const { status, data } = error.response;\r\n      console.log(\"API Response Headers:\", error.response.headers);\r\n      console.log(\"Request URL:\", error.config.url);\r\n      console.log(\"Request Headers:\", error.config.headers);\r\n\r\n      if (status === 401 || status === 403) {\r\n        // Clear token on auth errors\r\n        console.error(`Authentication error (${status}):`, data);\r\n        localStorage.removeItem(\"token\");\r\n      }\r\n      // Attach backend error message (if any) to error.message to make it easier to handle downstream\r\n         if (data && data.message) {\r\n             error.message = data.message;\r\n         }\r\n    } else if (error.request) {\r\n      console.error(\"Network error:\", error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n\r\nexport const recordApi = {\r\n  getAllRecords: () => axiosInstance.get(\"/api/records/all\"),\r\n  getRecordsById: (id) => axiosInstance.get(`/api/records/find/${id}`),\r\n  getRecordsByName: (name) => axiosInstance.get(`/api/records/find/name/${name}`),\r\n  createRecord: (recordData) => axiosInstance.post(\"/api/records/add\", recordData),\r\n  updateRecord: (id, recordData) =>\r\n    axiosInstance.put(`/api/records/update/${id}`, recordData),\r\n  deleteRecord: (id) => axiosInstance.delete(`/api/records/delete/${id}`),\r\n  rebookRecord: (id, rebookData) =>\r\n    axiosInstance.post(`/api/records/rebook/${id}`, rebookData),\r\n};\r\n\r\nexport const calendarApi = {\r\n  getMyCalendar: () => axiosInstance.get(\"/api/calendars/my\"),\r\n  getCalendarById: (id) => axiosInstance.get(`/api/calendars/${id}`),\r\n  addCalendar: (calendarData) =>\r\n    axiosInstance.post(\"/api/calendars\", calendarData),\r\n  deleteCalendar: (id) => axiosInstance.delete(`/api/calendars/${id}`),\r\n};\r\n\r\nexport const authApi = {\r\n  login: (credentials) => axiosInstance.post(\"/api/auth/login\", credentials),\r\n  register: (userData) => axiosInstance.post(\"/api/auth/register\", userData),\r\n  getCurrentUser: () => axiosInstance.get(\"/api/auth/user\"),\r\n  logout: () => axiosInstance.post(\"/api/auth/logout\"),\r\n  getOAuthUrl: () => \"http://localhost:8080/oauth2/authorization/google\",\r\n      resetPassword: (data) =>\r\n          axiosInstance.post(\"/api/auth/reset-password\", data),\r\n};\r\n\r\nexport const userApi = {\r\n    getUserProfile: () => axiosInstance.get(\"/api/auth/profile\"),\r\n    updateUser: (data) => axiosInstance.put(\"/api/auth/update-profile\", data),\r\n    deleteUser: (userId) =>\r\n        axiosInstance.post(\"/api/auth/delete\", null, {\r\n        params: { userId },\r\n        }),\r\n    fetchUsers: () => axiosInstance.get(\"/api/auth/all\"),\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}