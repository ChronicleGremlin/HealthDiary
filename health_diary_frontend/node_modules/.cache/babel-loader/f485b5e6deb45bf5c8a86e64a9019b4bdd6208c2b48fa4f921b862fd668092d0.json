{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexj\\\\Programing Projects\\\\health_diary\\\\health_diary_frontend\\\\src\\\\pages\\\\dashboard\\\\Calendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./Calendar.css\";\n// import RecordActionsModal from \"../../components/RecordActionsModal/RecordActionsModal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Calendar = ({\n  records = [],\n  onRecordUpdated\n}) => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [viewMode, setViewMode] = useState(\"month\");\n  const [selectedRecord, setSelectedRecord] = useState(null);\n  const [showRecordModal, setShowRecordModal] = useState(false);\n  const formatTime = timeStr => {\n    if (!timeStr) return \"\";\n    const timeWithoutSeconds = timeStr.split(\":\").slice(0, 2).join(\":\");\n    const [hours, minutes] = timeWithoutSeconds.split(\":\");\n    const hour = parseInt(hours);\n    const ampm = hour >= 12 ? \"PM\" : \"AM\";\n    const hour12 = hour % 12 || 12;\n    return `${hour12}:${minutes} ${ampm}`;\n  };\n  const getDaysInMonth = date => {\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n  };\n  const getFirstDayOfMonth = date => {\n    return new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n  };\n  const getRecordsForDate = date => {\n    console.log(\"Processing records for date:\", date);\n    console.log(\"All records:\", records);\n    return recods.filter(record => {\n      try {\n        console.log(\"Processing record:\", record);\n        console.log(\"Record date:\", record.date);\n        console.log(\"Record time:\", record.time);\n\n        // The date is already in YYYY-MM-DD format from the backend\n        const recordDate = new Date(record.date);\n\n        // Check if the date is valid\n        if (isNaN(recordDate.getTime())) {\n          console.warn(`Invalid date for record ${record.id}: ${record.date}`);\n          return false;\n        }\n        const recordDateObj = new Date(record.date);\n        const recordDateStr = recordDateObj.toISOString().split(\"T\")[0];\n        const compareDateStr = date.toISOString().split(\"T\")[0];\n        console.log(\"Comparing dates:\", {\n          recordDateStr,\n          compareDateStr,\n          matches: recordDateStr === compareDateStr\n        });\n        return recordDateStr === compareDateStr;\n      } catch (error) {\n        console.error(`Error processing record ${record.id}:`, error);\n        return false;\n      }\n    });\n  };\n  const handlePrevious = () => {\n    const newDate = new Date(currentDate);\n    switch (viewMode) {\n      case \"month\":\n        newDate.setMonth(currentDate.getMonth() - 1);\n        break;\n      case \"week\":\n        newDate.setDate(currentDate.getDate() - 7);\n        break;\n      case \"day\":\n        newDate.setDate(currentDate.getDate() - 1);\n        break;\n    }\n    setCurrentDate(newDate);\n  };\n  const handleNext = () => {\n    const newDate = new Date(currentDate);\n    switch (viewMode) {\n      case \"month\":\n        newDate.setMonth(currentDate.getMonth() + 1);\n        break;\n      case \"week\":\n        newDate.setDate(currentDate.getDate() + 7);\n        break;\n      case \"day\":\n        newDate.setDate(currentDate.getDate() + 1);\n        break;\n    }\n    setCurrentDate(newDate);\n  };\n  const getWeekDates = () => {\n    const dates = [];\n    const startOfWeek = new Date(currentDate);\n    startOfWeek.setDate(currentDate.getDate() - currentDate.getDay());\n    for (let i = 0; i < 7; i++) {\n      const date = new Date(startOfWeek);\n      date.setDate(startOfWeek.getDate() + i);\n      dates.push(date);\n    }\n    return dates;\n  };\n  const getTimeSlots = () => {\n    const slots = [];\n    for (let hour = 0; hour < 24; hour++) {\n      slots.push(`${hour.toString().padStart(2, \"0\")}:00`);\n    }\n    return slots;\n  };\n  const handleRecordClick = record => {\n    setSelectedRecord(record);\n    setShowRecordModal(true);\n  };\n  const handleRecordUpdated = () => {\n    setShowRecordModal(false);\n    setSelectedRecord(null);\n    if (onRecordUpdated) {\n      onRecordUpdated();\n    }\n  };\n  const renderMonthView = () => {\n    const daysInMonth = getDaysInMonth(currentDate);\n    const firstDay = getFirstDayOfMonth(currentDate);\n    const days = [];\n\n    // Add weekday headers\n    const weekdays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    const weekdayHeaders = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.calendarWeekdays,\n      children: weekdays.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.calendarWeekday,\n        children: day\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n\n    // Add empty cells for days before the first day of the month\n    for (let i = 0; i < firstDay; i++) {\n      days.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.calendarDay} ${styles.calendarDayEmpty}`\n      }, `empty-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this));\n    }\n\n    // Add days of the month\n    for (let day = 1; day <= daysInMonth; day++) {\n      const date = new Date(currentDate.getFullYear(), currentDate.getMonth(), day);\n      const dayRecords = getRecordsForDate(date);\n      days.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.calendarDay,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.calendarDayNumber,\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.calendarDayRecords,\n          children: dayRecords.map(record => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.calendarRecord,\n            onClick: () => handleRecordClick(record),\n            title: `${formatTime(record.time)} - ${record.name}\n                ${record.notes ? \"\\nNotes: \" + record.notes : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.recordTime,\n              children: formatTime(record.time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.recordName,\n              children: record.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)]\n          }, record.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this));\n    }\n\n    // Add empty cells for remaining days to complete the grid\n    const totalDays = firstDay + daysInMonth;\n    const remainingDays = Math.ceil(totalDays / 7) * 7 - totalDays;\n    for (let i = 0; i < remainingDays; i++) {\n      days.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.calendarDay} ${styles.calendarDayEmpty}`\n      }, `empty-end-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [weekdayHeaders, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.calendarGrid,\n        children: days\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  const renderWeekView = () => {\n    const weekDates = getWeekDates();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.calendarWeekView,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.calendarWeekHeader,\n        children: weekDates.map((date, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.calendarWeekDay,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.calendarWeekDayName,\n            children: date.toLocaleDateString(\"en-US\", {\n              weekday: \"short\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.calendarWeekDayNumber,\n            children: date.getDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.calendarWeekGrid,\n        children: weekDates.map((date, dateIndex) => {\n          const dayRecords = getRecordsForDate(date);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.calendarWeekDayColumn,\n            children: dayRecords.map(record => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.calendarRecordWeek,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.weekRecordTime,\n                children: formatTime(record.time)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.weekRecordName,\n                children: record.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this), record.notes && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.weekRecordNotes,\n                children: [\"\\uD83D\\uDCDD \", record.notes]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 23\n              }, this)]\n            }, record.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this))\n          }, dateIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this);\n  };\n  const renderDayView = () => {\n    const timeSlots = getTimeSlots();\n    const dayRecords = getRecordsForDate(currentDate);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.calendarDayView,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.calendarDayHeader,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.calendarDayTitle,\n          children: currentDate.toLocaleDateString(\"en-US\", {\n            weekday: \"long\",\n            month: \"long\",\n            day: \"numeric\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.calendarDayTimeline,\n        children: timeSlots.map((time, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.calendarTime,\n            children: time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.calendarSlotContent,\n            children: dayRecords.filter(record => record.time.split(\":\")[0] === time.split(\":\")[0]).map(record => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.calendarRecordWeek,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.weekRecordTime,\n                children: formatTime(record.time)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.weekRecordName,\n                children: record.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 23\n              }, this), record.notes && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.weekRecordNotes,\n                children: [\"\\uD83D\\uDCDD \", record.notes]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 25\n              }, this)]\n            }, record.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this);\n  };\n  const getViewTitle = () => {\n    switch (viewMode) {\n      case \"month\":\n        return currentDate.toLocaleDateString(\"en-US\", {\n          month: \"long\",\n          year: \"numeric\"\n        });\n      case \"week\":\n        const weekDates = getWeekDates();\n        const startDate = weekDates[0];\n        const endDate = weekDates[6];\n        return `${startDate.toLocaleDateString(\"en-US\", {\n          month: \"short\",\n          day: \"numeric\"\n        })} - ${endDate.toLocaleDateString(\"en-US\", {\n          month: \"short\",\n          day: \"numeric\",\n          year: \"numeric\"\n        })}`;\n      case \"day\":\n        return currentDate.toLocaleDateString(\"en-US\", {\n          weekday: \"long\",\n          month: \"long\",\n          day: \"numeric\",\n          year: \"numeric\"\n        });\n      default:\n        return \"\";\n    }\n  };\n  const renderRecords = () => {\n    if (!records || records.length === 0) return null;\n    return records.map(record => {\n      console.log(\"Record data:\", record);\n      console.log(\"Date:\", record.date);\n      console.log(\"Time:\", record.time);\n\n      // The time is already in HH:mm format from the backend\n      const timeStr = record.time;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `calendar-record ${viewMode === \"week\" ? \"week-record\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"record-time\",\n          children: timeStr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"record-name\",\n          children: record.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, record.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.calendar,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.navigation,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevious,\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: getViewTitle()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNext,\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.viewControls,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: viewMode === \"month\" ? styles.active : \"\",\n          onClick: () => setViewMode(\"month\"),\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: viewMode === \"week\" ? styles.active : \"\",\n          onClick: () => setViewMode(\"week\"),\n          children: \"Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: viewMode === \"day\" ? styles.active : \"\",\n          onClick: () => setViewMode(\"day\"),\n          children: \"Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), viewMode === \"month\" && renderMonthView(), viewMode === \"week\" && renderWeekView(), viewMode === \"day\" && renderDayView(), showRecordModal && selectedRecord && /*#__PURE__*/_jsxDEV(RecordActionsModal, {\n      record: selectedRecord,\n      onClose: () => setShowRecordModal(false),\n      onRecordUpdated: handleRecordUpdated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"yoM2cmFo6sEVNGmvhTAVGGdtsIw=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Calendar","records","onRecordUpdated","_s","currentDate","setCurrentDate","Date","viewMode","setViewMode","selectedRecord","setSelectedRecord","showRecordModal","setShowRecordModal","formatTime","timeStr","timeWithoutSeconds","split","slice","join","hours","minutes","hour","parseInt","ampm","hour12","getDaysInMonth","date","getFullYear","getMonth","getDate","getFirstDayOfMonth","getDay","getRecordsForDate","console","log","recods","filter","record","time","recordDate","isNaN","getTime","warn","id","recordDateObj","recordDateStr","toISOString","compareDateStr","matches","error","handlePrevious","newDate","setMonth","setDate","handleNext","getWeekDates","dates","startOfWeek","i","push","getTimeSlots","slots","toString","padStart","handleRecordClick","handleRecordUpdated","renderMonthView","daysInMonth","firstDay","days","weekdays","weekdayHeaders","className","calendarWeekdays","children","map","day","index","calendarWeekday","fileName","_jsxFileName","lineNumber","columnNumber","calendarDay","calendarDayEmpty","dayRecords","calendarDayNumber","calendarDayRecords","calendarRecord","onClick","title","name","notes","recordTime","recordName","totalDays","remainingDays","Math","ceil","calendarGrid","renderWeekView","weekDates","calendarWeekView","calendarWeekHeader","calendarWeekDay","calendarWeekDayName","toLocaleDateString","weekday","calendarWeekDayNumber","calendarWeekGrid","dateIndex","calendarWeekDayColumn","calendarRecordWeek","weekRecordTime","weekRecordName","weekRecordNotes","renderDayView","timeSlots","calendarDayView","calendarDayHeader","calendarDayTitle","month","calendarDayTimeline","calendarTime","calendarSlotContent","getViewTitle","year","startDate","endDate","renderRecords","length","calendar","header","navigation","viewControls","active","RecordActionsModal","onClose","_c","$RefreshReg$"],"sources":["C:/Users/alexj/Programing Projects/health_diary/health_diary_frontend/src/pages/dashboard/Calendar.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from \"./Calendar.css\";\r\n// import RecordActionsModal from \"../../components/RecordActionsModal/RecordActionsModal\";\r\n\r\nconst Calendar = ({ records = [], onRecordUpdated }) => {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n  const [viewMode, setViewMode] = useState(\"month\");\r\n  const [selectedRecord, setSelectedRecord] = useState(null);\r\n  const [showRecordModal, setShowRecordModal] = useState(false);\r\n\r\n  const formatTime = (timeStr) => {\r\n    if (!timeStr) return \"\";\r\n\r\n    const timeWithoutSeconds = timeStr.split(\":\").slice(0, 2).join(\":\");\r\n\r\n    const [hours, minutes] = timeWithoutSeconds.split(\":\");\r\n    const hour = parseInt(hours);\r\n    const ampm = hour >= 12 ? \"PM\" : \"AM\";\r\n    const hour12 = hour % 12 || 12;\r\n\r\n    return `${hour12}:${minutes} ${ampm}`;\r\n  };\r\n\r\n  const getDaysInMonth = (date) => {\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\r\n  };\r\n\r\n  const getFirstDayOfMonth = (date) => {\r\n    return new Date(date.getFullYear(), date.getMonth(), 1).getDay();\r\n  };\r\n\r\n  const getRecordsForDate = (date) => {\r\n    console.log(\"Processing records for date:\", date);\r\n    console.log(\"All records:\", records);\r\n\r\n    return recods.filter((record) => {\r\n      try {\r\n        console.log(\"Processing record:\", record);\r\n        console.log(\"Record date:\", record.date);\r\n        console.log(\"Record time:\", record.time);\r\n\r\n        // The date is already in YYYY-MM-DD format from the backend\r\n        const recordDate = new Date(record.date);\r\n\r\n        // Check if the date is valid\r\n        if (isNaN(recordDate.getTime())) {\r\n          console.warn(`Invalid date for record ${record.id}: ${record.date}`);\r\n          return false;\r\n        }\r\n\r\n        const recordDateObj = new Date(record.date);\r\n        const recordDateStr = recordDateObj.toISOString().split(\"T\")[0];\r\n        const compareDateStr = date.toISOString().split(\"T\")[0];\r\n\r\n        console.log(\"Comparing dates:\", {\r\n          recordDateStr,\r\n          compareDateStr,\r\n          matches: recordDateStr === compareDateStr,\r\n        });\r\n\r\n        return recordDateStr === compareDateStr;\r\n      } catch (error) {\r\n        console.error(`Error processing record ${record.id}:`, error);\r\n        return false;\r\n      }\r\n    });\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    const newDate = new Date(currentDate);\r\n    switch (viewMode) {\r\n      case \"month\":\r\n        newDate.setMonth(currentDate.getMonth() - 1);\r\n        break;\r\n      case \"week\":\r\n        newDate.setDate(currentDate.getDate() - 7);\r\n        break;\r\n      case \"day\":\r\n        newDate.setDate(currentDate.getDate() - 1);\r\n        break;\r\n    }\r\n    setCurrentDate(newDate);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const newDate = new Date(currentDate);\r\n    switch (viewMode) {\r\n      case \"month\":\r\n        newDate.setMonth(currentDate.getMonth() + 1);\r\n        break;\r\n      case \"week\":\r\n        newDate.setDate(currentDate.getDate() + 7);\r\n        break;\r\n      case \"day\":\r\n        newDate.setDate(currentDate.getDate() + 1);\r\n        break;\r\n    }\r\n    setCurrentDate(newDate);\r\n  };\r\n\r\n  const getWeekDates = () => {\r\n    const dates = [];\r\n    const startOfWeek = new Date(currentDate);\r\n    startOfWeek.setDate(currentDate.getDate() - currentDate.getDay());\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n      const date = new Date(startOfWeek);\r\n      date.setDate(startOfWeek.getDate() + i);\r\n      dates.push(date);\r\n    }\r\n    return dates;\r\n  };\r\n\r\n  const getTimeSlots = () => {\r\n    const slots = [];\r\n    for (let hour = 0; hour < 24; hour++) {\r\n      slots.push(`${hour.toString().padStart(2, \"0\")}:00`);\r\n    }\r\n    return slots;\r\n  };\r\n\r\n  const handleRecordClick = (record) => {\r\n    setSelectedRecord(record);\r\n    setShowRecordModal(true);\r\n  };\r\n\r\n  const handleRecordUpdated = () => {\r\n    setShowRecordModal(false);\r\n    setSelectedRecord(null);\r\n    if (onRecordUpdated) {\r\n      onRecordUpdated();\r\n    }\r\n  };\r\n\r\n  const renderMonthView = () => {\r\n    const daysInMonth = getDaysInMonth(currentDate);\r\n    const firstDay = getFirstDayOfMonth(currentDate);\r\n    const days = [];\r\n\r\n    // Add weekday headers\r\n    const weekdays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    const weekdayHeaders = (\r\n      <div className={styles.calendarWeekdays}>\r\n        {weekdays.map((day, index) => (\r\n          <div key={index} className={styles.calendarWeekday}>\r\n            {day}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n\r\n    // Add empty cells for days before the first day of the month\r\n    for (let i = 0; i < firstDay; i++) {\r\n      days.push(\r\n        <div\r\n          key={`empty-${i}`}\r\n          className={`${styles.calendarDay} ${styles.calendarDayEmpty}`}\r\n        />\r\n      );\r\n    }\r\n\r\n    // Add days of the month\r\n    for (let day = 1; day <= daysInMonth; day++) {\r\n      const date = new Date(\r\n        currentDate.getFullYear(),\r\n        currentDate.getMonth(),\r\n        day\r\n      );\r\n      const dayRecords = getRecordsForDate(date);\r\n\r\n      days.push(\r\n        <div key={day} className={styles.calendarDay}>\r\n          <div className={styles.calendarDayNumber}>{day}</div>\r\n          <div className={styles.calendarDayRecords}>\r\n            {dayRecords.map((record) => (\r\n              <div\r\n                key={record.id}\r\n                className={styles.calendarRecord}\r\n                onClick={() => handleRecordClick(record)}\r\n                title={`${formatTime(record.time)} - ${record.name}\r\n                ${record.notes ? \"\\nNotes: \" + record.notes : \"\"}`}\r\n              >\r\n                <div className={styles.recordTime}>{formatTime(record.time)}</div>\r\n                <div className={styles.recordName}>{record.name}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Add empty cells for remaining days to complete the grid\r\n    const totalDays = firstDay + daysInMonth;\r\n    const remainingDays = Math.ceil(totalDays / 7) * 7 - totalDays;\r\n    for (let i = 0; i < remainingDays; i++) {\r\n      days.push(\r\n        <div\r\n          key={`empty-end-${i}`}\r\n          className={`${styles.calendarDay} ${styles.calendarDayEmpty}`}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {weekdayHeaders}\r\n        <div className={styles.calendarGrid}>{days}</div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderWeekView = () => {\r\n    const weekDates = getWeekDates();\r\n\r\n    return (\r\n      <div className={styles.calendarWeekView}>\r\n        <div className={styles.calendarWeekHeader}>\r\n          {weekDates.map((date, index) => (\r\n            <div key={index} className={styles.calendarWeekDay}>\r\n              <div className={styles.calendarWeekDayName}>\r\n                {date.toLocaleDateString(\"en-US\", { weekday: \"short\" })}\r\n              </div>\r\n              <div className={styles.calendarWeekDayNumber}>\r\n                {date.getDate()}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className={styles.calendarWeekGrid}>\r\n          {weekDates.map((date, dateIndex) => {\r\n            const dayRecords = getRecordsForDate(date);\r\n            return (\r\n              <div key={dateIndex} className={styles.calendarWeekDayColumn}>\r\n                {dayRecords.map((record) => (\r\n                  <div key={record.id} className={styles.calendarRecordWeek}>\r\n                    <div className={styles.weekRecordTime}>\r\n                      {formatTime(record.time)}\r\n                    </div>\r\n                    <div className={styles.weekRecordName}>{record.name}</div>\r\n                    {record.notes && (\r\n                      <div className={styles.weekRecordNotes}>\r\n                        📝 {record.notes}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderDayView = () => {\r\n    const timeSlots = getTimeSlots();\r\n    const dayRecords = getRecordsForDate(currentDate);\r\n\r\n    return (\r\n      <div className={styles.calendarDayView}>\r\n        <div className={styles.calendarDayHeader}>\r\n          <div className={styles.calendarDayTitle}>\r\n            {currentDate.toLocaleDateString(\"en-US\", {\r\n              weekday: \"long\",\r\n              month: \"long\",\r\n              day: \"numeric\",\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className={styles.calendarDayTimeline}>\r\n          {timeSlots.map((time, index) => (\r\n            <React.Fragment key={index}>\r\n              <div className={styles.calendarTime}>{time}</div>\r\n              <div className={styles.calendarSlotContent}>\r\n                {dayRecords\r\n                  .filter(\r\n                    (record) => record.time.split(\":\")[0] === time.split(\":\")[0]\r\n                  )\r\n                  .map((record) => (\r\n                    <div key={record.id} className={styles.calendarRecordWeek}>\r\n                      <div className={styles.weekRecordTime}>\r\n                        {formatTime(record.time)}\r\n                      </div>\r\n                      <div className={styles.weekRecordName}>{record.name}</div>\r\n                      {record.notes && (\r\n                        <div className={styles.weekRecordNotes}>\r\n                          📝 {record.notes}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            </React.Fragment>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getViewTitle = () => {\r\n    switch (viewMode) {\r\n      case \"month\":\r\n        return currentDate.toLocaleDateString(\"en-US\", {\r\n          month: \"long\",\r\n          year: \"numeric\",\r\n        });\r\n      case \"week\":\r\n        const weekDates = getWeekDates();\r\n        const startDate = weekDates[0];\r\n        const endDate = weekDates[6];\r\n        return `${startDate.toLocaleDateString(\"en-US\", {\r\n          month: \"short\",\r\n          day: \"numeric\",\r\n        })} - ${endDate.toLocaleDateString(\"en-US\", {\r\n          month: \"short\",\r\n          day: \"numeric\",\r\n          year: \"numeric\",\r\n        })}`;\r\n      case \"day\":\r\n        return currentDate.toLocaleDateString(\"en-US\", {\r\n          weekday: \"long\",\r\n          month: \"long\",\r\n          day: \"numeric\",\r\n          year: \"numeric\",\r\n        });\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const renderRecords = () => {\r\n    if (!records || records.length === 0) return null;\r\n\r\n    return records.map((record) => {\r\n      console.log(\"Record data:\", record);\r\n      console.log(\"Date:\", record.date);\r\n      console.log(\"Time:\", record.time);\r\n\r\n      // The time is already in HH:mm format from the backend\r\n      const timeStr = record.time;\r\n\r\n      return (\r\n        <div\r\n          key={record.id}\r\n          className={`calendar-record ${\r\n            viewMode === \"week\" ? \"week-record\" : \"\"\r\n          }`}\r\n        >\r\n          <span className=\"record-time\">{timeStr}</span>\r\n          <span className=\"record-name\">{record.name}</span>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.calendar}>\r\n      <div className={styles.header}>\r\n        <div className={styles.navigation}>\r\n          <button onClick={handlePrevious}>&lt;</button>\r\n          <h2>{getViewTitle()}</h2>\r\n          <button onClick={handleNext}>&gt;</button>\r\n        </div>\r\n        <div className={styles.viewControls}>\r\n          <button\r\n            className={viewMode === \"month\" ? styles.active : \"\"}\r\n            onClick={() => setViewMode(\"month\")}\r\n          >\r\n            Month\r\n          </button>\r\n          <button\r\n            className={viewMode === \"week\" ? styles.active : \"\"}\r\n            onClick={() => setViewMode(\"week\")}\r\n          >\r\n            Week\r\n          </button>\r\n          <button\r\n            className={viewMode === \"day\" ? styles.active : \"\"}\r\n            onClick={() => setViewMode(\"day\")}\r\n          >\r\n            Day\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {viewMode === \"month\" && renderMonthView()}\r\n      {viewMode === \"week\" && renderWeekView()}\r\n      {viewMode === \"day\" && renderDayView()}\r\n      {showRecordModal && selectedRecord && (\r\n        <RecordActionsModal\r\n          record={selectedRecord}\r\n          onClose={() => setShowRecordModal(false)}\r\n          onRecordUpdated={handleRecordUpdated}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}