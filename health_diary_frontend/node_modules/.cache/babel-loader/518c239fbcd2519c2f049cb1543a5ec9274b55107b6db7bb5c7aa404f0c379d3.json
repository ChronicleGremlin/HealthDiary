{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexj\\\\Programing Projects\\\\health_diary\\\\health_diary_frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from \"react\";\nimport { authApi } from \"./service/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  useEffect(() => {\n    // Check if user is logged in\n    const checkAuth = async () => {\n      if (token) {\n        try {\n          const response = await authApi.getCurrentUser();\n          setUser(response.data);\n        } catch (error) {\n          console.error(\"Error fetching user:\", error);\n          localStorage.removeItem(\"token\");\n          setToken(null);\n          setUser(null);\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, [token]);\n  const login = async credentials => {\n    try {\n      const response = await authApi.login(credentials);\n      const {\n        token: newToken,\n        user: userData\n      } = response.data;\n      if (newToken) {\n        localStorage.setItem(\"token\", newToken);\n        setToken(newToken);\n        setUser(userData);\n        return true;\n      } else {\n        throw new Error(\"No token received from server\");\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      // Clear any existing tokens on login failure\n      localStorage.removeItem(\"token\");\n      setToken(null);\n      setUser(null);\n      throw error;\n    }\n  };\n  const register = async formData => {\n    try {\n      if (formData.password !== formData.verifyPassword) {\n        throw new Error(\"Passwords do not match\");\n      }\n      const response = await authApi.register(formData);\n      return response.data.message;\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await authApi.logout();\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      localStorage.removeItem(\"token\");\n      setToken(null);\n      setUser(null);\n    }\n  };\n  const value = {\n    user,\n    setUser,\n    loading,\n    login,\n    register,\n    logout,\n    token,\n    setToken,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"CqPWeQPIAZcxf1k81ln9DyaZT80=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","authApi","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","checkAuth","response","getCurrentUser","data","error","console","removeItem","login","credentials","newToken","userData","setItem","Error","register","formData","password","verifyPassword","message","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/alexj/Programing Projects/health_diary/health_diary_frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from \"react\";\r\nimport { authApi } from \"./service/api\";\r\n\r\nexport const AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in\r\n    const checkAuth = async () => {\r\n      if (token) {\r\n        try {\r\n          const response = await authApi.getCurrentUser();\r\n          setUser(response.data);\r\n        } catch (error) {\r\n          console.error(\"Error fetching user:\", error);\r\n          localStorage.removeItem(\"token\");\r\n          setToken(null);\r\n          setUser(null);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, [token]);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      const response = await authApi.login(credentials);\r\n      const { token: newToken, user: userData } = response.data;\r\n\r\n      if (newToken) {\r\n        localStorage.setItem(\"token\", newToken);\r\n        setToken(newToken);\r\n        setUser(userData);\r\n        return true;\r\n      } else {\r\n        throw new Error(\"No token received from server\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      // Clear any existing tokens on login failure\r\n      localStorage.removeItem(\"token\");\r\n      setToken(null);\r\n      setUser(null);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (formData) => {\r\n    try {\r\n      if (formData.password !== formData.verifyPassword) {\r\n        throw new Error(\"Passwords do not match\");\r\n      }\r\n\r\n      const response = await authApi.register(formData);\r\n      return response.data.message;\r\n    } catch (error) {\r\n      console.error(\"Registration error:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await authApi.logout();\r\n    } catch (error) {\r\n      console.error(\"Logout error:\", error);\r\n    } finally {\r\n      localStorage.removeItem(\"token\");\r\n      setToken(null);\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    setUser,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    token,\r\n    setToken,\r\n    isAuthenticated: !!user,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,IAAI,CAAC;AAE9C,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAACgB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAEjEf,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAIJ,KAAK,EAAE;QACT,IAAI;UACF,MAAMK,QAAQ,GAAG,MAAMhB,OAAO,CAACiB,cAAc,CAAC,CAAC;UAC/CT,OAAO,CAACQ,QAAQ,CAACE,IAAI,CAAC;QACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;UAC5CN,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;UAChCT,QAAQ,CAAC,IAAI,CAAC;UACdJ,OAAO,CAAC,IAAI,CAAC;QACf;MACF;MACAE,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDK,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,MAAMW,KAAK,GAAG,MAAOC,WAAW,IAAK;IACnC,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMhB,OAAO,CAACsB,KAAK,CAACC,WAAW,CAAC;MACjD,MAAM;QAAEZ,KAAK,EAAEa,QAAQ;QAAEjB,IAAI,EAAEkB;MAAS,CAAC,GAAGT,QAAQ,CAACE,IAAI;MAEzD,IAAIM,QAAQ,EAAE;QACZX,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAAC;QACvCZ,QAAQ,CAACY,QAAQ,CAAC;QAClBhB,OAAO,CAACiB,QAAQ,CAAC;QACjB,OAAO,IAAI;MACb,CAAC,MAAM;QACL,MAAM,IAAIE,KAAK,CAAC,+BAA+B,CAAC;MAClD;IACF,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC;MACAN,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;MAChCT,QAAQ,CAAC,IAAI,CAAC;MACdJ,OAAO,CAAC,IAAI,CAAC;MACb,MAAMW,KAAK;IACb;EACF,CAAC;EAED,MAAMS,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACnC,IAAI;MACF,IAAIA,QAAQ,CAACC,QAAQ,KAAKD,QAAQ,CAACE,cAAc,EAAE;QACjD,MAAM,IAAIJ,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MAEA,MAAMX,QAAQ,GAAG,MAAMhB,OAAO,CAAC4B,QAAQ,CAACC,QAAQ,CAAC;MACjD,OAAOb,QAAQ,CAACE,IAAI,CAACc,OAAO;IAC9B,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMc,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAMjC,OAAO,CAACiC,MAAM,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOd,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC,CAAC,SAAS;MACRN,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;MAChCT,QAAQ,CAAC,IAAI,CAAC;MACdJ,OAAO,CAAC,IAAI,CAAC;IACf;EACF,CAAC;EAED,MAAM0B,KAAK,GAAG;IACZ3B,IAAI;IACJC,OAAO;IACPC,OAAO;IACPa,KAAK;IACLM,QAAQ;IACRK,MAAM;IACNtB,KAAK;IACLC,QAAQ;IACRuB,eAAe,EAAE,CAAC,CAAC5B;EACrB,CAAC;EAED,oBACEL,OAAA,CAACC,WAAW,CAACiC,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAA7B,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAAClC,EAAA,CA3FWF,YAAY;AAAAqC,EAAA,GAAZrC,YAAY;AA6FzB,OAAO,MAAMsC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG9C,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACyC,OAAO,EAAE;IACZ,MAAM,IAAIjB,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOiB,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}